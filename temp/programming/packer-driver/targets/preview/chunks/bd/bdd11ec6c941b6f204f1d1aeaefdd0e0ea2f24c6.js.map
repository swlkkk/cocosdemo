{"version":3,"sources":["file:///Users/swl/Downloads/cocosPusher/assets/scripts/beginVs.ts"],"names":["_decorator","Component","director","sys","native","i18n","ccclass","property","beginVs","onLoad","os","OS","ANDROID","isNative","lang","reflection","callStaticMethod","indexOf","init","updateSceneRenderers","IOS","OSX","bridge","onNative","arg0","arg1","sendToNative","start","preloadScene","err","console","log","loadScene","error","update","deltaTime"],"mappings":";;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,Q,OAAAA,Q;AAAUC,MAAAA,G,OAAAA,G;AAAKC,MAAAA,M,OAAAA,M;;AACzCC,MAAAA,I;;;;;;;;;OACN;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;;yBAGjBQ,O,WADZF,OAAO,CAAC,SAAD,C,gBAAR,MACaE,OADb,SAC6BP,SAD7B,CACuC;AACnCQ,QAAAA,MAAM,GAAG;AACL,cAAIN,GAAG,CAACO,EAAJ,IAAUP,GAAG,CAACQ,EAAJ,CAAOC,OAAjB,IAA4BT,GAAG,CAACU,QAApC,EAA8C;AAC1C,gBAAIC,IAAI,GAAGV,MAAM,CAACW,UAAP,CAAkBC,gBAAlB,CAAmC,4CAAnC,EAAiF,aAAjF,EAAgG,sBAAhG,CAAX;;AACA,gBAAIF,IAAI,CAACG,OAAL,CAAa,IAAb,KAAsB,CAAC,CAA3B,EAA8B;AAC1BZ,cAAAA,IAAI,CAACa,IAAL,CAAU,IAAV;AACAb,cAAAA,IAAI,CAACc,oBAAL;AACH;AACJ,WAND,MAMO,IAAIhB,GAAG,CAACU,QAAJ,KAAiBV,GAAG,CAACO,EAAJ,IAAUP,GAAG,CAACQ,EAAJ,CAAOS,GAAjB,IAAwBjB,GAAG,CAACO,EAAJ,IAAUP,GAAG,CAACQ,EAAJ,CAAOU,GAA1D,CAAJ,EAAoE;AACvEjB,YAAAA,MAAM,CAACkB,MAAP,CAAcC,QAAd,GAAyB,CAACC,IAAD,EAAeC,IAAf,KAAsC;AAC3D,kBAAID,IAAI,IAAI,YAAZ,EAA0B;AACtB,oBAAIV,KAAI,GAAGW,IAAX;;AACA,oBAAIX,KAAI,CAACG,OAAL,CAAa,IAAb,KAAsB,CAAC,CAA3B,EAA8B;AAC1BZ,kBAAAA,IAAI,CAACa,IAAL,CAAU,IAAV;AACAb,kBAAAA,IAAI,CAACc,oBAAL;AACH;AACJ;;AACD;AACH,aATD;;AAUAf,YAAAA,MAAM,CAACkB,MAAP,CAAcI,YAAd,CAA2B,aAA3B;AACH;AACJ;;AACDC,QAAAA,KAAK,GAAG;AACJzB,UAAAA,QAAQ,CAAC0B,YAAT,CAAsB,OAAtB,EAA+BC,GAAD,IAAO;AACjC,gBAAGA,GAAH,EAAQ;AACJC,cAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA;AACH;;AACD,gBAAI;AACA7B,cAAAA,QAAQ,CAAC8B,SAAT,CAAmB,OAAnB;AACH,aAFD,CAEE,OAAOC,KAAP,EAAc;AACZH,cAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACH;AACJ,WAVD;AAWH;;AACDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AArCkC,O","sourcesContent":["import { _decorator, Component, Node, director, sys, native, assetManager, game, loader, } from 'cc';\nimport * as i18n from 'db://i18n/LanguageData';\nconst { ccclass, property } = _decorator;\n\n@ccclass('beginVs')\nexport class beginVs extends Component {\n    onLoad() {\n        if (sys.os == sys.OS.ANDROID && sys.isNative) {\n            let lang = native.reflection.callStaticMethod(\"com/lotogram/tbjdwc/mvvm/ui/activity/TuibiDevicesActivity\", \"getLanguage\", \"()Ljava/lang/String;\")\n            if (lang.indexOf('zh') == -1) {\n                i18n.init('en')\n                i18n.updateSceneRenderers()\n            }\n        } else if (sys.isNative && (sys.os == sys.OS.IOS || sys.os == sys.OS.OSX)) {\n            native.bridge.onNative = (arg0: string, arg1: string): void => {\n                if (arg0 == 'cocos_lang') {\n                    let lang = arg1\n                    if (lang.indexOf('zh') == -1) {\n                        i18n.init('en')\n                        i18n.updateSceneRenderers()\n                    }\n                }\n                return;\n            }\n            native.bridge.sendToNative('native_lang');\n        }\n    }\n    start() {\n        director.preloadScene(\"scene\",(err)=>{\n            if(err) {\n                console.log('加载失败');\n                return\n            }\n            try {\n                director.loadScene(\"scene\");\n            } catch (error) {\n                console.log(error);\n            }\n        })\n    }\n    update(deltaTime: number) {\n\n    }\n}"]}