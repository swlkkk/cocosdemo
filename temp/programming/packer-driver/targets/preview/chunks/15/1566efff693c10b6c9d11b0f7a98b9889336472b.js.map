{"version":3,"sources":["file:///Users/swl/Desktop/cocos/cocos%E5%AE%89%E5%8D%93%E5%A4%87%E4%BB%BD/assets/scripts/getScore.ts"],"names":["_decorator","Component","Collider","poolManager","coinCreate","scoreAn","ccclass","property","getScore","start","collider","node","getComponent","on","onCollision","event","instance","putNode","otherCollider","cjTs","parent","activeClosed","scoreno","getChildByName","isDroped","no","price","sendData","websocketFnc","ws_validcoin","websocket","websocket_sendMessage","ws","wsuuid","wssalt","update","deltaTime"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,Q,OAAAA,Q;;AAC7BC,MAAAA,W,iBAAAA,W;;AACAC,MAAAA,U,iBAAAA,U;;AACAC,MAAAA,O,iBAAAA,O;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;;0BAIjBQ,Q,WADZF,OAAO,CAAC,UAAD,C,gBAAR,MACaE,QADb,SAC8BP,SAD9B,CACwC;AACpCQ,QAAAA,KAAK,GAAG;AACJ,cAAIC,QAAQ,GAAG,KAAKC,IAAL,CAAUC,YAAV,CAAuBV,QAAvB,CAAf,CADI,CAEJ;;AACAQ,UAAAA,QAAQ,CAACG,EAAT,CAAY,iBAAZ,EAA+B,KAAKC,WAApC,EAAiD,IAAjD;AACH;;AAEOA,QAAAA,WAAW,CAACC,KAAD,EAAyB;AACxC;AACA;AAAA;AAAA,0CAAYC,QAAZ,CAAqBC,OAArB,CAA6BF,KAAK,CAACG,aAAN,CAAoBP,IAAjD,EAFwC,CAGxC;;AACA,cAAIQ,IAAI,GAAG,KAAKR,IAAL,CAAUS,MAAV,CAAiBR,YAAjB;AAAA;AAAA,uCAAX;;AACA,cAAIO,IAAI,CAACE,YAAT,EAAuB;AACnB;AACH;;AACD,cAAIC,OAAO,GAAG,KAAKX,IAAL,CAAUS,MAAV,CAAiBG,cAAjB,CAAgC,MAAhC,EAAwCA,cAAxC,CAAuD,QAAvD,EAAiEA,cAAjE,CAAgF,UAAhF,EAA4FX,YAA5F;AAAA;AAAA,iCAAd;;AACA,cAAGO,IAAI,CAACK,QAAR,EAAkB;AACdL,YAAAA,IAAI,CAACM,EAAL,GAAUN,IAAI,CAACM,EAAL,GAAUN,IAAI,CAACO,KAAzB;AACA,gBAAIC,QAAQ,GAAGR,IAAI,CAACS,YAAL,CAAkBC,YAAlB,CAA+BV,IAAI,CAACM,EAApC,CAAf;AACAH,YAAAA,OAAO,CAACjB,OAAR,CAAgBc,IAAI,CAACO,KAArB;AACAP,YAAAA,IAAI,CAACW,SAAL,CAAeC,qBAAf,CAAqCJ,QAArC,EAA+CR,IAAI,CAACa,EAApD,EAAwDb,IAAI,CAACc,MAA7D,EAAqEd,IAAI,CAACe,MAA1E;AACH;AACJ;;AAEDC,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AA1BmC,O","sourcesContent":["import { _decorator, Component, Node, Collider, ICollisionEvent, RigidBody } from 'cc';\nimport { poolManager } from './poolManager';\nimport { coinCreate } from './coinCreate';\nimport { scoreAn } from './scoreAn';\nconst { ccclass, property } = _decorator;\n\n\n@ccclass('getScore')\nexport class getScore extends Component {\n    start() {\n        let collider = this.node.getComponent(Collider);\n        // 监听触发事件\n        collider.on('onCollisionStay', this.onCollision, this)\n    }\n\n    private onCollision(event: ICollisionEvent) {\n        // 检测到掉落到前面的金币加分并且销毁预制体\n        poolManager.instance.putNode(event.otherCollider.node)\n        // 拿到coinCreate主节点\n        let cjTs = this.node.parent.getComponent(coinCreate)\n        if (cjTs.activeClosed) {\n            return\n        }\n        let scoreno = this.node.parent.getChildByName('Main').getChildByName('Canvas').getChildByName('scoreAdd').getComponent(scoreAn)\n        if(cjTs.isDroped) {\n            cjTs.no = cjTs.no + cjTs.price\n            let sendData = cjTs.websocketFnc.ws_validcoin(cjTs.no)\n            scoreno.scoreAn(cjTs.price)\n            cjTs.websocket.websocket_sendMessage(sendData, cjTs.ws, cjTs.wsuuid, cjTs.wssalt)\n        }\n    }\n\n    update(deltaTime: number) {\n\n    }\n}\n\n"]}