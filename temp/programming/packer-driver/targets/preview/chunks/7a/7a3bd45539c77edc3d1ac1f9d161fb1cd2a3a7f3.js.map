{"version":3,"sources":["file:///Users/swl/Desktop/cocos/cocos_android1/assets/scripts/pushplate.ts"],"names":["_decorator","Component","tween","Vec3","RigidBody","Collider","ccclass","property","pushplate","moveOut","moveIn","start","console","log","collider","node","getComponent","on","onCollision","addComponent","pushRigbody","type","group","rotationPlate","event","coinBody","otherCollider","name","useCCD","clearState","add","position","inSide","to","easing","outSide","then","union","repeatForever","update","deltaTime"],"mappings":";;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,Q,OAAAA,Q;;;;;;;;;OACxD;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;;2BAGjBQ,S,WADZF,OAAO,CAAC,WAAD,C,gBAAR,MACaE,SADb,SAC+BP,SAD/B,CACyC;AAAA;AAAA;AAAA,eAC9BQ,OAD8B,GACd,IAAIN,IAAJ,CAAS,CAAT,EAAY,GAAZ,EAAiB,CAAjB,CADc;AAAA,eAE9BO,MAF8B,GAEf,IAAIP,IAAJ,CAAS,CAAT,EAAY,CAAC,GAAb,EAAkB,CAAlB,CAFe;AAAA;;AAGrCQ,QAAAA,KAAK,GAAG;AACJC,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,cAAIC,QAAQ,GAAG,KAAKC,IAAL,CAAUC,YAAV,CAAuBX,QAAvB,CAAf,CAFI,CAGJ;;AACAS,UAAAA,QAAQ,CAACG,EAAT,CAAY,kBAAZ,EAAgC,KAAKC,WAArC,EAAkD,IAAlD,EAJI,CAKJ;;AACA,eAAKH,IAAL,CAAUI,YAAV,CAAuBf,SAAvB;AACA,cAAIgB,WAAW,GAAG,KAAKL,IAAL,CAAUC,YAAV,CAAuBZ,SAAvB,CAAlB;AACAgB,UAAAA,WAAW,CAACC,IAAZ,GAAmB,CAAnB;AACAD,UAAAA,WAAW,CAACE,KAAZ,GAAoB,CAApB;AACA,eAAKC,aAAL,CAAmB,KAAKR,IAAxB;AACH;;AAEOG,QAAAA,WAAW,CAACM,KAAD,EAAyB;AACxC,cAAIC,QAAQ,GAAGD,KAAK,CAACE,aAAN,CAAoBX,IAApB,CAAyBC,YAAzB,CAAsCZ,SAAtC,CAAf;;AACA,cAAIqB,QAAQ,IAAI,IAAhB,EAAsB;AAClB,gBAAIA,QAAQ,CAACV,IAAT,CAAcY,IAAd,IAAsB,SAA1B,EAAqC;AACjCF,cAAAA,QAAQ,CAACG,MAAT,GAAkB,KAAlB;AACAH,cAAAA,QAAQ,CAACI,UAAT;AACH;AACJ;AACJ;;AAEDN,QAAAA,aAAa,CAACR,IAAD,EAAa;AACtBZ,UAAAA,IAAI,CAAC2B,GAAL,CAAS,KAAKpB,MAAd,EAAsB,KAAKA,MAA3B,EAAmC,KAAKK,IAAL,CAAUgB,QAA7C;AACA5B,UAAAA,IAAI,CAAC2B,GAAL,CAAS,KAAKrB,OAAd,EAAuB,KAAKA,OAA5B,EAAqC,KAAKC,MAA1C;AACA,cAAIsB,MAAM,GAAG9B,KAAK,GAAG+B,EAAR,CAAW,GAAX,EAAgB;AAAEF,YAAAA,QAAQ,EAAE,KAAKrB;AAAjB,WAAhB,EAA2C;AAAEwB,YAAAA,MAAM,EAAE;AAAV,WAA3C,CAAb;AACA,cAAIC,OAAO,GAAGjC,KAAK,GAAG+B,EAAR,CAAW,GAAX,EAAgB;AAAEF,YAAAA,QAAQ,EAAE,KAAKtB;AAAjB,WAAhB,EAA4C;AAAEyB,YAAAA,MAAM,EAAE;AAAV,WAA5C,CAAd;AACAhC,UAAAA,KAAK,CAACa,IAAD,CAAL,CAAYqB,IAAZ,CAAiBJ,MAAjB,EAAyBI,IAAzB,CAA8BD,OAA9B,EAAuCE,KAAvC,GAA+CC,aAA/C,GAA+D3B,KAA/D;AACH;;AAED4B,QAAAA,MAAM,CAACC,SAAD,EAAoB,CACzB;;AAnCoC,O","sourcesContent":["import { _decorator, Component, Node, tween, Vec3, RigidBody, Collider, ICollisionEvent, assetManager } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('pushplate')\nexport class pushplate extends Component {\n    public moveOut: Vec3 = new Vec3(0, 7.5, 0)\n    public moveIn: Vec3 = new Vec3(0, -7.5, 0)\n    start() {\n        console.log('pushplate初始化');\n        let collider = this.node.getComponent(Collider);\n        // 监听触发事件\n        collider.on('onCollisionEnter', this.onCollision, this);\n        // 动态添加刚体\n        this.node.addComponent(RigidBody)\n        let pushRigbody = this.node.getComponent(RigidBody)\n        pushRigbody.type = 4\n        pushRigbody.group = 4\n        this.rotationPlate(this.node)\n    }\n\n    private onCollision(event: ICollisionEvent) {\n        var coinBody = event.otherCollider.node.getComponent(RigidBody);\n        if (coinBody != null) {\n            if (coinBody.node.name == 'coinnew') {\n                coinBody.useCCD = false\n                coinBody.clearState()\n            }\n        }\n    }\n\n    rotationPlate(node: Node) {\n        Vec3.add(this.moveIn, this.moveIn, this.node.position)\n        Vec3.add(this.moveOut, this.moveOut, this.moveIn)\n        let inSide = tween().to(1.3, { position: this.moveIn }, { easing: 'linear' })\n        let outSide = tween().to(1.3, { position: this.moveOut }, { easing: 'linear' })\n        tween(node).then(inSide).then(outSide).union().repeatForever().start()\n    }\n\n    update(deltaTime: number) {\n    }\n}"]}