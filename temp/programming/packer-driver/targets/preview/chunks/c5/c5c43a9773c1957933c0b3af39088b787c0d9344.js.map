{"version":3,"sources":["file:///Users/swl/Desktop/cocos/cocos%E5%AE%89%E5%8D%93%E5%A4%87%E4%BB%BD/assets/scripts/jpScorets.ts"],"names":["_decorator","Component","Label","ccclass","property","jpScorets","_allScore","_getScore","start","console","log","fillter","number","toString","allScore","parmas","allLabel","string","getScore","getscoreLabel","update","deltaTime"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,c,OAAAA,c;;;;;;;;;OAChC;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBJ,U;;2BAGjBK,S,WADZF,OAAO,CAAC,WAAD,C,UAEHC,QAAQ,CAACF,cAAD,C,UAERE,QAAQ,CAACF,cAAD,C,2BAJb,MACaG,SADb,SAC+BJ,SAD/B,CACyC;AAAA;AAAA;;AAAA;;AAAA;;AAAA,eAyB7BK,SAzB6B,GAyBT,CAzBS;AAAA,eA0B7BC,SA1B6B,GA0BT,CA1BS;AAAA;;AAKrCC,QAAAA,KAAK,GAAG;AACJC,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACH;;AAEDC,QAAAA,OAAO,CAACC,MAAD,EAAiB;AACpB,cAAIA,MAAM,GAAG,EAAb,EAAiB;AACb,mBAAO,UAAUA,MAAM,CAACC,QAAP,EAAjB;AACH,WAFD,MAEO,IAAID,MAAM,IAAI,EAAV,IAAgBA,MAAM,GAAG,GAA7B,EAAkC;AACrC,mBAAO,SAASA,MAAM,CAACC,QAAP,EAAhB;AACH,WAFM,MAEA,IAAID,MAAM,IAAI,GAAV,IAAiBA,MAAM,GAAG,IAA9B,EAAoC;AACvC,mBAAO,QAAQA,MAAM,CAACC,QAAP,EAAf;AACH,WAFM,MAEA,IAAID,MAAM,IAAI,IAAV,IAAkBA,MAAM,GAAG,KAA/B,EAAsC;AACzC,mBAAO,OAAOA,MAAM,CAACC,QAAP,EAAd;AACH,WAFM,MAEA,IAAID,MAAM,IAAI,KAAV,IAAmBA,MAAM,GAAG,MAAhC,EAAwC;AAC3C,mBAAO,MAAMA,MAAM,CAACC,QAAP,EAAb;AACH,WAFM,MAEA,IAAID,MAAM,IAAI,MAAV,IAAoBA,MAAM,GAAG,OAAjC,EAA0C;AAC7C,mBAAOA,MAAM,CAACC,QAAP,EAAP;AACH;AACJ;;AAKD;AACmB,YAARC,QAAQ,GAAW;AAC1B,iBAAO,KAAKR,SAAZ;AACH;;AAEkB,YAARQ,QAAQ,CAACC,MAAD,EAAiB;AAChC,eAAKT,SAAL,GAAiBS,MAAjB;AACA,eAAKC,QAAL,CAAcC,MAAd,GAAuB,KAAKN,OAAL,CAAa,KAAKL,SAAlB,CAAvB;AACH,SApCoC,CAsCrC;;;AACmB,YAARY,QAAQ,GAAW;AAC1B,iBAAO,KAAKX,SAAZ;AACH;;AAEkB,YAARW,QAAQ,CAACH,MAAD,EAAiB;AAChC,eAAKR,SAAL,GAAiBQ,MAAjB;AACA,eAAKI,aAAL,CAAmBF,MAAnB,GAA4B,KAAKN,OAAL,CAAa,KAAKJ,SAAlB,CAA5B;AACH;;AAEDa,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AAlDoC,O;;;;;iBAEV,I;;;;;;;iBAEK,I","sourcesContent":["import { _decorator, Component, Node, Label } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('jpScorets')\nexport class jpScorets extends Component {\n    @property(Label)\n    allLabel: Label = null;\n    @property(Label)\n    getscoreLabel: Label = null;\n    start() {\n        console.log('jpscore这里初始化');\n    }\n\n    fillter(number: number) {\n        if (number < 10) {\n            return '00000' + number.toString()\n        } else if (number >= 10 && number < 100) {\n            return '0000' + number.toString()\n        } else if (number >= 100 && number < 1000) {\n            return '000' + number.toString()\n        } else if (number >= 1000 && number < 10000) {\n            return '00' + number.toString()\n        } else if (number >= 10000 && number < 100000) {\n            return '0' + number.toString()\n        } else if (number >= 100000 && number < 1000000) {\n            return number.toString()\n        }\n    }\n\n    private _allScore: number = 0;\n    private _getScore: number = 0;\n\n    // 总分\n    public get allScore(): number {\n        return this._allScore\n    }\n\n    public set allScore(parmas: number) {\n        this._allScore = parmas;\n        this.allLabel.string = this.fillter(this._allScore)\n    }\n\n    // 获得\n    public get getScore(): number {\n        return this._getScore\n    }\n\n    public set getScore(parmas: number) {\n        this._getScore = parmas;\n        this.getscoreLabel.string = this.fillter(this._getScore)\n    }\n\n    update(deltaTime: number) {\n\n    }\n}\n\n"]}