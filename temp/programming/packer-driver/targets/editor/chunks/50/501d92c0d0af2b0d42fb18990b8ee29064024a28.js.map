{"version":3,"sources":["file:///Users/swl/Desktop/cocos/cocos_android/assets/scripts/wiperLeft.ts"],"names":["_decorator","Component","Vec3","tween","ccclass","property","wiperLeft","wileft","start","wiper","node","getChildByName","rotationWiper","roteLeft","to","eulerAngles","easing","roteZero","roteRight","then","union","repeatForever","update","deltaTime"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,I,OAAAA,I;;AAC7BC,MAAAA,K,iBAAAA,K;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;;2BAGjBM,S,WADZF,OAAO,CAAC,WAAD,C,gBAAR,MACaE,SADb,SAC+BL,SAD/B,CACyC;AAAA;AAAA;AAAA,eACrCM,MADqC,GAC5B,IAD4B;AAAA;;AAErCC,QAAAA,KAAK,GAAG;AACJ,cAAIC,KAAK,GAAG,KAAKC,IAAL,CAAUC,cAAV,CAAyB,SAAzB,CAAZ;AACA,eAAKC,aAAL,CAAmBH,KAAnB;AACH;;AAEDG,QAAAA,aAAa,CAACF,IAAD,EAAa;AACtB,cAAIG,QAAQ,GAAG;AAAA;AAAA,gCAAQC,EAAR,CAAW,GAAX,EAAgB;AAAEC,YAAAA,WAAW,EAAE,IAAIb,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAe,CAAC,EAAhB;AAAf,WAAhB,EAAsD;AAAEc,YAAAA,MAAM,EAAE;AAAV,WAAtD,CAAf;AACA,cAAIC,QAAQ,GAAG;AAAA;AAAA,gCAAQH,EAAR,CAAW,GAAX,EAAgB;AAAEC,YAAAA,WAAW,EAAE,IAAIb,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAe,CAAf;AAAf,WAAhB,EAAoD;AAAEc,YAAAA,MAAM,EAAE;AAAV,WAApD,CAAf;AACA,cAAIE,SAAS,GAAG;AAAA;AAAA,gCAAQJ,EAAR,CAAW,GAAX,EAAgB;AAAEC,YAAAA,WAAW,EAAE,IAAIb,IAAJ,CAAS,CAAT,EAAY,CAAZ,EAAe,EAAf;AAAf,WAAhB,EAAqD;AAAEc,YAAAA,MAAM,EAAE;AAAV,WAArD,CAAhB;AACA,eAAKT,MAAL,GAAc;AAAA;AAAA,8BAAMG,IAAN,EAAYS,IAAZ,CAAiBN,QAAjB,EAA2BM,IAA3B,CAAgCF,QAAhC,EAA0CE,IAA1C,CAA+CD,SAA/C,EAA0DC,IAA1D,CAA+DF,QAA/D,EAAyEG,KAAzE,GAAiFC,aAAjF,EAAd;AACA,eAAKd,MAAL,CAAYC,KAAZ;AACH;;AAEDc,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AAjBoC,O","sourcesContent":["import { _decorator, Component, Node, Vec3 } from 'cc';\nimport { tween } from '../tween';\nconst { ccclass, property } = _decorator;\n\n@ccclass('wiperLeft')\nexport class wiperLeft extends Component {\n    wileft = null\n    start() {\n        var wiper = this.node.getChildByName('wiper_l')\n        this.rotationWiper(wiper)\n    }\n\n    rotationWiper(node: Node) {\n        let roteLeft = tween().to(1.5, { eulerAngles: new Vec3(0, 0, -45) }, { easing: 'linear' })\n        let roteZero = tween().to(1.5, { eulerAngles: new Vec3(0, 0, 0) }, { easing: 'linear' })\n        let roteRight = tween().to(1.5, { eulerAngles: new Vec3(0, 0, 45) }, { easing: 'linear' })\n        this.wileft = tween(node).then(roteLeft).then(roteZero).then(roteRight).then(roteZero).union().repeatForever()\n        this.wileft.start()\n    }\n\n    update(deltaTime: number) {\n\n    }\n}\n\n"]}