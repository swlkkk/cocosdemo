{"version":3,"sources":["file:///Users/swl/Downloads/cocosPusher/assets/scripts/avatarts.ts"],"names":["_decorator","Component","assetManager","SpriteFrame","Texture2D","resources","isValid","GPRoundBoxSprite","ccclass","property","avatarts","cache","start","getUserAvatar","remoteUrl","index","lastIndexOf","ext","substring","isAssetTypeImage","load","err","spritePath","node","getChildByName","getComponent","spriteFrame","loadRemote","imageAsset","spFrame","uuid","texture","image","addRef","indexOf","toLowerCase","releaseRemoteSprite","sp","decRef","refCount","packable","original","_texture","destroy","update","deltaTime"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, ImageAsset, assetManager, SpriteFrame, Texture2D, Sprite, resources, isValid } from 'cc';\nimport { GPRoundBoxSprite } from './GPRoundBoxSprite';\nconst { ccclass, property } = _decorator;\n\n@ccclass('avatarts')\nexport class avatarts extends Component {\n    cache: { [name: string]: SpriteFrame } = {};\n    start() {\n    }\n    getUserAvatar(remoteUrl: string) {\n        var index = remoteUrl.lastIndexOf(\".\");\n        var ext = remoteUrl.substring(index + 1)\n        if (!this.isAssetTypeImage(ext)) {\n            resources.load('default_avatar/spriteFrame', SpriteFrame, (err, spritePath) => {\n                if (!err && spritePath) {\n                    this.node.getChildByName('avatar').getComponent(GPRoundBoxSprite).spriteFrame = spritePath\n                }\n            })\n        } else {\n            assetManager.loadRemote<ImageAsset>(remoteUrl, (err, imageAsset) => {\n                if (!err && imageAsset) {\n                    let spFrame = this.cache[imageAsset.uuid];\n                    if(!spFrame) {\n                        const texture = new Texture2D();\n                        texture.image = imageAsset;\n                        spFrame = new SpriteFrame();\n                        spFrame.texture = texture;\n                        imageAsset.addRef();\n                        this.cache[imageAsset.uuid] = spFrame\n                        this.node.getChildByName('avatar').getComponent(GPRoundBoxSprite).spriteFrame = spFrame\n                    }\n                    spFrame.addRef();\n                }\n            });\n        }\n    }\n    isAssetTypeImage(ext) {\n        return ['png', 'jpg', 'jpeg'].indexOf(ext.toLowerCase()) !== -1\n    }\n    releaseRemoteSprite(node: Node) {\n        if (!isValid(node)) {\n            return;\n        }\n        const sp = node.getChildByName('avatar').getComponent(GPRoundBoxSprite);\n        if (sp && sp.spriteFrame) {\n            const spFrame = sp.spriteFrame;\n            sp.spriteFrame.decRef(false); // 只把计数减1\n            sp.spriteFrame = null;\n            \n            if (spFrame.refCount <= 0) {\n                let texture = spFrame.texture as Texture2D;\n                // 如果已加入动态合图，必须取原始的Texture2D\n                if (spFrame.packable) {\n                    texture = spFrame.original?._texture as Texture2D;\n                }\n                if (texture) {\n                    delete this.cache[texture.image!.uuid]; // 删除映射表记录\n                    texture.image?.decRef();\n                    texture.destroy();\n                }\n                spFrame.destroy();\n            }\n        }\n    }\n    update(deltaTime: number) {\n\n    }\n}\n\n"]}