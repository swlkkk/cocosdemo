{"version":3,"sources":["file:///Users/swl/Desktop/cocos/cocos%E5%AE%89%E5%8D%93%E5%A4%87%E4%BB%BD/assets/scripts/Socket/socketFun.ts"],"names":["_decorator","Component","encrypt","ccclass","property","socketFun","Enc","start","shuffle","obj","keys","Object","newObj","sort","Math","random","forEach","key","ws_dropcoin","sendData","action","ws_userout","ws_channelpass","channel","ws_validcoin","no","ws_spinpass","update","deltaTime"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;;AAEZC,MAAAA,O,iBAAAA,O;;;;;;;;;OADH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBJ,U;;2BAIjBK,S,WADZF,OAAO,CAAC,WAAD,C,gBAAR,MACaE,SADb,SAC+BJ,SAD/B,CACyC;AAAA;AAAA;AAAA,eAIrCK,GAJqC,GAI/B;AAAA;AAAA,mCAJ+B;AAAA;;AACrCC,QAAAA,KAAK,GAAG,CAEP;;AAEDC,QAAAA,OAAO,CAACC,GAAD,EAAM;AACT,gBAAMC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYD,GAAZ,CAAb;AACA,gBAAMG,MAAM,GAAG,EAAf;AACAF,UAAAA,IAAI,CAACG,IAAL,CAAU,MAAMC,IAAI,CAACC,MAAL,KAAgB,GAAhC,EAAqCC,OAArC,CAA8CC,GAAD,IAAS;AAClDL,YAAAA,MAAM,CAACK,GAAD,CAAN,GAAcR,GAAG,CAACQ,GAAD,CAAjB;AACH,WAFD;AAGA,iBAAOL,MAAP;AACH;;AACDM,QAAAA,WAAW,GAAG;AACV,cAAIC,QAAa,GAAG;AAChBC,YAAAA,MAAM,EAAE;AADQ,WAApB;AAGA,iBAAOD,QAAP;AACH;;AACDE,QAAAA,UAAU,GAAG;AACT,cAAIF,QAAa,GAAG;AAChBC,YAAAA,MAAM,EAAE;AADQ,WAApB;AAGA,iBAAOD,QAAP;AACH;;AACDG,QAAAA,cAAc,CAACC,OAAD,EAAU;AACpB,cAAIJ,QAAa,GAAG;AAChBC,YAAAA,MAAM,EAAE,CADQ;AAEhBG,YAAAA,OAAO,EAAEA;AAFO,WAApB;AAIA,iBAAOJ,QAAP;AACH;;AACDK,QAAAA,YAAY,CAACC,EAAD,EAAY;AACpB,cAAIN,QAAa,GAAG;AAChBC,YAAAA,MAAM,EAAE,CADQ;AAEhBK,YAAAA,EAAE,EAAEA;AAFY,WAApB;AAIA,iBAAON,QAAP;AACH;;AACDO,QAAAA,WAAW,GAAG;AACV,cAAIP,QAAa,GAAG;AAChBC,YAAAA,MAAM,EAAE;AADQ,WAApB;AAGA,iBAAOD,QAAP;AACH;;AACDQ,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AA/CoC,O","sourcesContent":["import { _decorator, Component, Node } from 'cc';\nconst { ccclass, property } = _decorator;\nimport { encrypt } from '../Api/encrypt';\n\n@ccclass('socketFun')\nexport class socketFun extends Component {\n    start() {\n\n    }\n    Enc = new encrypt()\n    shuffle(obj) {\n        const keys = Object.keys(obj)\n        const newObj = {}\n        keys.sort(() => Math.random() - 0.5).forEach((key) => {\n            newObj[key] = obj[key]\n        })\n        return newObj\n    }\n    ws_dropcoin() {\n        let sendData: any = {\n            action: 2,\n        }\n        return sendData\n    }\n    ws_userout() {\n        let sendData: any = {\n            action: 6,\n        }\n        return sendData\n    }\n    ws_channelpass(channel) {\n        let sendData: any = {\n            action: 3,\n            channel: channel,\n        }\n        return sendData\n    }\n    ws_validcoin(no:number) {\n        let sendData: any = {\n            action: 5,\n            no: no\n        }\n        return sendData\n    }\n    ws_spinpass() {\n        let sendData: any = {\n            action: 4,\n        }\n        return sendData\n    }\n    update(deltaTime: number) {\n        \n    }\n}\n\n"]}