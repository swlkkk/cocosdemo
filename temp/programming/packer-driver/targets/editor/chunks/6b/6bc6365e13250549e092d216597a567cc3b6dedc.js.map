{"version":3,"sources":["file:///Users/swl/Desktop/cocos/cocos_tbjdwc/assets/scripts/wiperRight.ts"],"names":["_decorator","Component","Vec3","tween","ccclass","property","wiperRight","wiRight","start","wiper","node","getChildByName","rotationWiper","roteLeft","to","eulerAngles","easing","roteZero","roteRight","then","union","repeatForever","update","deltaTime"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAiBC,MAAAA,I,OAAAA,I;;AAC7BC,MAAAA,K,iBAAAA,K;;;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBL,U;;4BAGjBM,U,WADZF,OAAO,CAAC,YAAD,C,gBAAR,MACaE,UADb,SACgCL,SADhC,CAC0C;AAAA;AAAA;AAAA,eACtCM,OADsC,GAC5B,IAD4B;AAAA;;AAEtCC,QAAAA,KAAK,GAAG;AACJ,cAAIC,KAAK,GAAG,KAAKC,IAAL,CAAUC,cAAV,CAAyB,SAAzB,CAAZ;AACA,eAAKC,aAAL,CAAmBH,KAAnB;AACH;;AAEDG,QAAAA,aAAa,CAACF,IAAD,EAAa;AACtB,cAAIG,QAAQ,GAAG;AAAA;AAAA,gCAAQC,EAAR,CAAW,GAAX,EAAe;AAACC,YAAAA,WAAW,EAAE,IAAIb,IAAJ,CAAU,CAAV,EAAY,CAAZ,EAAc,CAAC,EAAf;AAAd,WAAf,EAAkD;AAACc,YAAAA,MAAM,EAAE;AAAT,WAAlD,CAAf;AACA,cAAIC,QAAQ,GAAG;AAAA;AAAA,gCAAQH,EAAR,CAAW,GAAX,EAAe;AAACC,YAAAA,WAAW,EAAE,IAAIb,IAAJ,CAAU,CAAV,EAAY,CAAZ,EAAc,CAAd;AAAd,WAAf,EAAgD;AAACc,YAAAA,MAAM,EAAE;AAAT,WAAhD,CAAf;AACA,cAAIE,SAAS,GAAE;AAAA;AAAA,gCAAQJ,EAAR,CAAW,GAAX,EAAe;AAACC,YAAAA,WAAW,EAAE,IAAIb,IAAJ,CAAU,CAAV,EAAY,CAAZ,EAAc,EAAd;AAAd,WAAf,EAAiD;AAACc,YAAAA,MAAM,EAAE;AAAT,WAAjD,CAAf;AACA,eAAKT,OAAL,GAAe;AAAA;AAAA,8BAAMG,IAAN,EAAYS,IAAZ,CAAiBN,QAAjB,EAA2BM,IAA3B,CAAgCF,QAAhC,EAA0CE,IAA1C,CAA+CD,SAA/C,EAA0DC,IAA1D,CAA+DF,QAA/D,EAAyEG,KAAzE,GAAiFC,aAAjF,EAAf;AACA,eAAKd,OAAL,CAAaC,KAAb;AACH;;AAEDc,QAAAA,MAAM,CAACC,SAAD,EAAoB,CAEzB;;AAjBqC,O","sourcesContent":["import { _decorator, Component, Node, Vec3} from 'cc';\nimport { tween } from '../tween';\nconst { ccclass, property } = _decorator;\n\n@ccclass('wiperRight')\nexport class wiperRight extends Component {\n    wiRight = null\n    start() {\n        var wiper = this.node.getChildByName('wiper_r')\n        this.rotationWiper(wiper)\n    }\n\n    rotationWiper(node: Node) {\n        let roteLeft = tween().to(1.5,{eulerAngles: new Vec3 (0,0,-45)}, {easing: 'linear'})\n        let roteZero = tween().to(1.5,{eulerAngles: new Vec3 (0,0,0)}, {easing: 'linear'})\n        let roteRight= tween().to(1.5,{eulerAngles: new Vec3 (0,0,45)}, {easing: 'linear'})\n        this.wiRight = tween(node).then(roteLeft).then(roteZero).then(roteRight).then(roteZero).union().repeatForever()\n        this.wiRight.start()\n    }\n\n    update(deltaTime: number) {\n        \n    }\n}"]}