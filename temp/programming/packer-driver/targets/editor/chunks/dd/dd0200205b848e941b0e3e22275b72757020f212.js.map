{"version":3,"sources":["file:///Users/swl/Downloads/cocosPusher/extensions/localization-editor/static/assets/core/l10n-manager.ts"],"names":["L10nManager","game","assetManager","createInstance","EDITOR","BUILD","PREVIEW","ResourceDataManager","mainName","pluginName","constructor","_intl","undefined","_options","resourceList","resourceBundle","resourceDataManager","isInitialized","createIntl","options","reloadResult","reloadResourceData","localStorageLanguage","localStorage","getItem","l10n","localStorageLanguageKey","LOCAL_STORAGE_LANGUAGE_KEY","checkLanguage","defaultLanguage","language","fallbackLanguage","resources","i18nextOptions","lng","fallbackLng","ns","ALLOW_NAMESPACE","defaultNS","DEFAULT_NAMESPACE","initImmediate","load","init","setAssetOverrideMap","ASSET_NAMESPACE","length","languages","find","it","cloneIntl","Error","cloneInstance","readResourceList","console","log","readResourceBundle","config","changeLanguage","warn","currentLanguage","releaseOverrideMap","setItem","restart","t","key","tn","value","toString","cloneOptions","Object","assign","keys","Intl","NumberFormat","format","td","date","DateTimeFormat","tt","unit","RelativeTimeFormat","tl","ListFormat","exists","direction","Locale","textInfo","on","event","callback","off","getResourceBundle","namespace","assetNamespace","assetsOverrideMap","set","delete"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-non-null-assertion */\r\nimport { createInstance, i18n, InitOptions as I18NextInitOptions } from 'i18next';\r\n// @ts-ignore\r\nimport { EDITOR, BUILD, PREVIEW } from 'cc/env';\r\nimport { game, assetManager } from 'cc';\r\nimport type { L10nOptions, ResourceData, L10nKey, L10nValue, ResourceItem } from './l10n-options';\r\nimport {\r\n    DateTimeFormatOptions,\r\n    FormattedValue,\r\n    NumberFormatOptions,\r\n    RelativeTimeFormatOptions,\r\n    RelativeTimeFormatUnit,\r\n    StandardOption,\r\n    Template,\r\n    TextInfoDirection,\r\n} from './icu-options';\r\nimport L10nListenEvent from './l10n-listen-event';\r\nimport ResourceDataManager from './resource-data-manager';\r\nimport { mainName, pluginName } from './localization-global';\r\nimport { ResourceBundle, ResourceList } from './l10n-options';\r\n\r\nexport class L10nManager {\r\n    static LOCAL_STORAGE_LANGUAGE_KEY = `${mainName}/language`;\r\n    static readonly DEFAULT_NAMESPACE = 'translation' as const;\r\n    static readonly ASSET_NAMESPACE = 'asset' as const;\r\n    static readonly ALLOW_NAMESPACE = [L10nManager.DEFAULT_NAMESPACE, L10nManager.ASSET_NAMESPACE] as const;\r\n    static l10n: L10nManager = new L10nManager();\r\n    /**\r\n     * @zh\r\n     * i18n 实例\r\n     * @en\r\n     * i18next instance\r\n     */\r\n    private _intl?: i18n = undefined;\r\n\r\n    private _options: L10nOptions = {};\r\n\r\n    private resourceList?: ResourceList;\r\n\r\n    private resourceBundle: ResourceBundle = {};\r\n\r\n    public resourceDataManager: ResourceDataManager;\r\n\r\n    private constructor() {\r\n        this.resourceDataManager = new ResourceDataManager();\r\n    }\r\n\r\n    public isInitialized(): boolean {\r\n        return this._intl?.isInitialized ?? false;\r\n    }\r\n\r\n    public async createIntl(options: L10nOptions) {\r\n        const reloadResult = await this.reloadResourceData();\r\n        if (!reloadResult) {\r\n            return;\r\n        }\r\n        this._options = options;\r\n        this._intl = createInstance();\r\n        let localStorageLanguage: string | undefined = undefined;\r\n        if (BUILD && !PREVIEW) {\r\n            localStorageLanguage = localStorage.getItem(\r\n                l10n['_options'].localStorageLanguageKey ?? L10nManager.LOCAL_STORAGE_LANGUAGE_KEY,\r\n            );\r\n            localStorageLanguage = this.checkLanguage(localStorageLanguage);\r\n        }\r\n        const defaultLanguage = localStorageLanguage ?? options.language ?? this.resourceList.defaultLanguage;\r\n        const fallbackLanguage = options.fallbackLanguage ?? this.resourceList.fallbackLanguage;\r\n        const resources = options.resources ?? this.resourceBundle;\r\n\r\n        const i18nextOptions: I18NextInitOptions = {\r\n            lng: defaultLanguage,\r\n            fallbackLng: fallbackLanguage,\r\n            resources: { ...resources },\r\n            ns: L10nManager.ALLOW_NAMESPACE,\r\n            defaultNS: L10nManager.DEFAULT_NAMESPACE,\r\n            initImmediate: false,\r\n            load: 'currentOnly',\r\n        };\r\n        await this._intl.init(i18nextOptions);\r\n        this.setAssetOverrideMap(resources[defaultLanguage][L10nManager.ASSET_NAMESPACE]);\r\n\r\n    }\r\n\r\n    public checkLanguage(language: string): string | undefined {\r\n        if (!language || language.length === 0 || language === 'null' || language === null || language === 'undefined' || language === undefined) {\r\n            return undefined;\r\n        }\r\n        if (this.resourceList && this.resourceList.languages.length > 0 && this.resourceList.languages.find(it => it === language)) {\r\n            return language;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    public cloneIntl(options: L10nOptions) {\r\n        if (!this._intl) {\r\n            throw new Error('i18next not init, please use \\'l10n.createIntl\\'');\r\n        }\r\n        this._intl = this._intl.cloneInstance(options);\r\n    }\r\n\r\n    async reloadResourceData(): Promise<boolean> {\r\n        this.resourceList = await this.resourceDataManager.readResourceList();\r\n        if (!this.resourceList) {\r\n            console.log(`[${pluginName}] not found translate language list, skip init l10n`);\r\n            return false;\r\n        }\r\n        this.resourceBundle = await this.resourceDataManager.readResourceBundle(this.resourceList?.languages ?? []);\r\n        if (!this.resourceList?.defaultLanguage) {\r\n            console.log(`[${pluginName}] not found translate language data, skip init l10n`);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /** 初始化 i18next */\r\n    public config(options: L10nOptions) {\r\n        this.cloneIntl(options);\r\n    }\r\n\r\n    public async changeLanguage(language: Intl.BCP47LanguageTag) {\r\n        if (!language) {\r\n            console.warn(`[${pluginName}] invalid language tag`);\r\n            return;\r\n        }\r\n        console.log(`[${pluginName}] will change language to`, language);\r\n        if (this._intl) {\r\n            if (this.currentLanguage) {\r\n                this.releaseOverrideMap(this.resourceBundle[this.currentLanguage][L10nManager.ASSET_NAMESPACE]);\r\n            }\r\n            await this._intl.changeLanguage(language);\r\n            this.setAssetOverrideMap(this.resourceBundle[language][L10nManager.ASSET_NAMESPACE]);\r\n            if (!EDITOR) {\r\n                localStorage.setItem(L10nManager.LOCAL_STORAGE_LANGUAGE_KEY, language);\r\n                console.log(`[${pluginName}] game will restart`);\r\n                game.restart();\r\n            }\r\n        } else {\r\n            console.log(`[${pluginName}] language data not load, please confirm whether the language data is included in the build`);\r\n        }\r\n    }\r\n\r\n    public t(key: L10nKey, options?: StandardOption | Template): L10nValue {\r\n        if (!(this._intl?.isInitialized ?? false)) return key;\r\n        return this._intl!.t(key, options);\r\n    }\r\n\r\n    /**\r\n     * 实验性功能暂不开放\r\n     * 数字类ICU\r\n     */\r\n    private tn(value: number, options?: NumberFormatOptions): FormattedValue {\r\n        if (!(this._intl?.isInitialized ?? false)) return value.toString();\r\n        const cloneOptions: NumberFormatOptions = {};\r\n        Object.assign(cloneOptions, options);\r\n        type NumberFormatOptionsKey = keyof NumberFormatOptions;\r\n        for (const key of Object.keys(cloneOptions) as NumberFormatOptionsKey[]) {\r\n            if (typeof cloneOptions[key] === 'string' && (cloneOptions[key] as string)!.length === 0) {\r\n                delete cloneOptions[key];\r\n            } else if (typeof cloneOptions[key] === 'number' && cloneOptions[key] === 0) {\r\n                delete cloneOptions[key];\r\n            }\r\n        }\r\n        return new Intl.NumberFormat(this._intl?.language, cloneOptions).format(value);\r\n    }\r\n\r\n    /**\r\n     * 实验性功能暂不开放\r\n     * 日期/时刻类ICU\r\n     */\r\n    private td(date: Date, options?: DateTimeFormatOptions): FormattedValue {\r\n        if (!(this._intl?.isInitialized ?? false)) return date.toString();\r\n        const cloneOptions: DateTimeFormatOptions = {};\r\n        Object.assign(cloneOptions, options);\r\n        type DateTimeFormatOptionsKey = keyof DateTimeFormatOptions;\r\n        for (const key of Object.keys(cloneOptions) as DateTimeFormatOptionsKey[]) {\r\n            if (typeof cloneOptions[key] === 'string' && (cloneOptions[key] as string).length === 0) {\r\n                delete cloneOptions[key];\r\n            }\r\n        }\r\n        return new Intl.DateTimeFormat(this._intl?.language, cloneOptions as Intl.DateTimeFormatOptions).format(date);\r\n    }\r\n\r\n    /**\r\n     * 实验性功能暂不开放\r\n     * 时长类ICU\r\n     */\r\n    private tt(value: number, unit: RelativeTimeFormatUnit, options?: RelativeTimeFormatOptions): FormattedValue {\r\n        if (!(this._intl?.isInitialized ?? false)) return value.toString();\r\n        const cloneOptions: RelativeTimeFormatOptions = {};\r\n        Object.assign(cloneOptions, options);\r\n        type RelativeTimeFormatOptionsKey = keyof RelativeTimeFormatOptions;\r\n        for (const key of Object.keys(cloneOptions) as RelativeTimeFormatOptionsKey[]) {\r\n            if (typeof cloneOptions[key] === 'string' && (cloneOptions[key] as string).length === 0) {\r\n                delete cloneOptions[key];\r\n            }\r\n        }\r\n        return new Intl.RelativeTimeFormat(this._intl?.language, cloneOptions as Intl.RelativeTimeFormatOptions).format(\r\n            value,\r\n            unit as Intl.RelativeTimeFormatUnit,\r\n        );\r\n    }\r\n\r\n    /**\r\n     * 实验性功能暂不开放\r\n     * 数组类ICU\r\n     */\r\n    private tl(value: string[]): FormattedValue {\r\n        if (!(this._intl?.isInitialized ?? false)) return value.toString();\r\n        return new Intl.ListFormat(this._intl?.language).format(value);\r\n    }\r\n\r\n    public exists(key: L10nKey): boolean {\r\n        return this._intl?.exists(key) ?? false;\r\n    }\r\n\r\n    get currentLanguage(): Intl.BCP47LanguageTag {\r\n        return this._intl?.language ?? '';\r\n    }\r\n\r\n    get languages(): readonly Intl.BCP47LanguageTag[] {\r\n        return this.resourceList?.languages ?? [];\r\n    }\r\n\r\n    public direction(language?: Intl.BCP47LanguageTag): TextInfoDirection {\r\n        return (language ? new Intl.Locale(language) : new Intl.Locale(this._intl!.language)).textInfo()\r\n            .direction as TextInfoDirection;\r\n    }\r\n\r\n    public on(event: L10nListenEvent, callback: (...args: any[]) => void) {\r\n        this._intl?.on(event, callback);\r\n    }\r\n\r\n    public off(event: L10nListenEvent, callback: (...args: any[]) => void) {\r\n        this._intl?.off(event, callback);\r\n    }\r\n\r\n    public getResourceBundle(language: string, namespace: typeof L10nManager.ALLOW_NAMESPACE[number]): ResourceData | undefined {\r\n        return this._intl?.getResourceBundle(language, namespace);\r\n    }\r\n\r\n    protected setAssetOverrideMap(assetNamespace: Readonly<ResourceItem>) {\r\n        for (const key of Object.keys(assetNamespace)) {\r\n            assetManager.assetsOverrideMap.set(key, assetNamespace[key]);\r\n        }\r\n    }\r\n\r\n    protected releaseOverrideMap(assetNamespace: Readonly<ResourceItem>) {\r\n        for (const key of Object.keys(assetNamespace)) {\r\n            assetManager.assetsOverrideMap.delete(key);\r\n        }\r\n    }\r\n}\r\n\r\nconst l10n: L10nManager = L10nManager.l10n;\r\n\r\nexport default l10n;\r\n"]}