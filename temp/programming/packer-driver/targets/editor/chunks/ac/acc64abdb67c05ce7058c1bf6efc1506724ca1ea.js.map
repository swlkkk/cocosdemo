{"version":3,"sources":["file:///Users/swl/Desktop/cocos/cocos_android/assets/scripts/xmlAnim.ts"],"names":["_decorator","Component","Animation","i18n","ccclass","property","xmlAnim","start","switchOne","control","xmlAnimate","node","getComponent","getChildByName","active","_language","play","stop","switchTwo","switchThree","num","recoverAll","update","deltaTime"],"mappings":"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","sourcesContent":["import { _decorator, Component, Node, Animation} from 'cc';\nimport * as i18n from 'db://i18n/LanguageData';\nconst { ccclass, property } = _decorator;\n\n@ccclass('xmlAnim')\nexport class xmlAnim extends Component {\n    start() {\n        this.switchOne(true)\n    }\n\n    // 控制第一个剪辑动画\n    switchOne (control: boolean) {\n        let xmlAnimate = this.node.getComponent(Animation)\n        if(control) {\n            this.node.getChildByName('Sprite').active = true\n            if(i18n._language == 'tc') {\n                xmlAnimate.play('xmlanimate')\n            } else {\n                xmlAnimate.play('xmlanimate_en')\n            }\n        } else {\n            this.node.getChildByName('Sprite').active = false\n            xmlAnimate.stop()\n        }\n    }\n\n    // 控制第二个剪辑动画\n    switchTwo (control: boolean) {\n        let xmlAnimate = this.node.getComponent(Animation)\n        if(control) {\n            this.node.getChildByName('Sprite1').active = true\n            if(i18n._language == 'tc') {\n                xmlAnimate.play('xmlanimate')\n            } else {\n                xmlAnimate.play('xmlanimate_en')\n            }\n        } else {\n            this.node.getChildByName('Sprite1').active = false\n            xmlAnimate.stop()\n        }\n    }\n\n    // 控制按下和结束\n    switchThree(num: number,control: boolean) {\n        if(num == 1) {\n            if(control) {\n                this.node.getChildByName('Sprite2').active = true\n            } else {\n                this.node.getChildByName('Sprite2').active = false\n            }\n        } else if(num == 2) {\n            if(control) {\n                this.node.getChildByName('Sprite3').active = true\n            } else {\n                this.node.getChildByName('Sprite3').active = false\n            }\n        }\n    }\n\n    recoverAll() {\n        this.node.getChildByName('Sprite').active = false\n        this.node.getChildByName('Sprite1').active = false\n        this.node.getChildByName('Sprite2').active = false\n        this.node.getChildByName('Sprite3').active = false\n    }\n\n    update(deltaTime: number) {\n        \n    }\n}\n\n"]}